// Code generated by SQLBoiler 4.5.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributes)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributes)
	t.Run("DiscountRules", testDiscountRules)
}

func TestDelete(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesDelete)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesDelete)
	t.Run("DiscountRules", testDiscountRulesDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesQueryDeleteAll)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesQueryDeleteAll)
	t.Run("DiscountRules", testDiscountRulesQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesSliceDeleteAll)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesSliceDeleteAll)
	t.Run("DiscountRules", testDiscountRulesSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesExists)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesExists)
	t.Run("DiscountRules", testDiscountRulesExists)
}

func TestFind(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesFind)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesFind)
	t.Run("DiscountRules", testDiscountRulesFind)
}

func TestBind(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesBind)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesBind)
	t.Run("DiscountRules", testDiscountRulesBind)
}

func TestOne(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesOne)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesOne)
	t.Run("DiscountRules", testDiscountRulesOne)
}

func TestAll(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesAll)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesAll)
	t.Run("DiscountRules", testDiscountRulesAll)
}

func TestCount(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesCount)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesCount)
	t.Run("DiscountRules", testDiscountRulesCount)
}

func TestHooks(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesHooks)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesHooks)
	t.Run("DiscountRules", testDiscountRulesHooks)
}

func TestInsert(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesInsert)
	t.Run("DiscountAttributes", testDiscountAttributesInsertWhitelist)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesInsert)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesInsertWhitelist)
	t.Run("DiscountRules", testDiscountRulesInsert)
	t.Run("DiscountRules", testDiscountRulesInsertWhitelist)
}

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("DiscountAttributeToDiscountRuleUsingDiscountRule", testDiscountAttributeToOneDiscountRuleUsingDiscountRule)
	t.Run("DiscountMetaAttributeToDiscountAttributeUsingDiscountAttribute", testDiscountMetaAttributeToOneDiscountAttributeUsingDiscountAttribute)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("DiscountAttributeToDiscountMetaAttributes", testDiscountAttributeToManyDiscountMetaAttributes)
	t.Run("DiscountRuleToDiscountAttributes", testDiscountRuleToManyDiscountAttributes)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("DiscountAttributeToDiscountRuleUsingDiscountAttributes", testDiscountAttributeToOneSetOpDiscountRuleUsingDiscountRule)
	t.Run("DiscountMetaAttributeToDiscountAttributeUsingDiscountMetaAttributes", testDiscountMetaAttributeToOneSetOpDiscountAttributeUsingDiscountAttribute)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("DiscountAttributeToDiscountRuleUsingDiscountAttributes", testDiscountAttributeToOneRemoveOpDiscountRuleUsingDiscountRule)
	t.Run("DiscountMetaAttributeToDiscountAttributeUsingDiscountMetaAttributes", testDiscountMetaAttributeToOneRemoveOpDiscountAttributeUsingDiscountAttribute)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("DiscountAttributeToDiscountMetaAttributes", testDiscountAttributeToManyAddOpDiscountMetaAttributes)
	t.Run("DiscountRuleToDiscountAttributes", testDiscountRuleToManyAddOpDiscountAttributes)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("DiscountAttributeToDiscountMetaAttributes", testDiscountAttributeToManySetOpDiscountMetaAttributes)
	t.Run("DiscountRuleToDiscountAttributes", testDiscountRuleToManySetOpDiscountAttributes)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("DiscountAttributeToDiscountMetaAttributes", testDiscountAttributeToManyRemoveOpDiscountMetaAttributes)
	t.Run("DiscountRuleToDiscountAttributes", testDiscountRuleToManyRemoveOpDiscountAttributes)
}

func TestReload(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesReload)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesReload)
	t.Run("DiscountRules", testDiscountRulesReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesReloadAll)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesReloadAll)
	t.Run("DiscountRules", testDiscountRulesReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesSelect)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesSelect)
	t.Run("DiscountRules", testDiscountRulesSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesUpdate)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesUpdate)
	t.Run("DiscountRules", testDiscountRulesUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("DiscountAttributes", testDiscountAttributesSliceUpdateAll)
	t.Run("DiscountMetaAttributes", testDiscountMetaAttributesSliceUpdateAll)
	t.Run("DiscountRules", testDiscountRulesSliceUpdateAll)
}
